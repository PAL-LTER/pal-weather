#!/usr/bin/python
#
# Palmer LTER - Weather Processing Scripts
# Monthly averaged weather: knb-lter-pal.189
#
# This script calculates the monthly average weather for Palmer Station, Antarctica,
# based on a merged version of the daily weather (climatology) dataset (knb-lter-pal.28).
#
# The daily climatology data files are generated by the Palmer Station RA's, and made
# available by the by the ARMC archive at UW-Madison.  Daily averages have been
# calculated a variety of ways over the years, including high/low measurements
# in the 80's, to 4x daily measurements in the 90's, and then averages of 1-2 minute
# data after Nov. 2001.  Instrumentation has also changed over that time, from manual
# to automatic.  Thus, care must be taken when interpreting monthly averages.
#
# Edited by Sage Lichtenwalner, Rutgers University, 9/1/2023

import argparse
import pandas as pd
import numpy as np

# Primary function
def main():
  df = pd.read_csv('PalmerStation_Daily_Weather.csv', index_col='Date', parse_dates=True)
  
  # Fix Precipitation - Version 8 considered Trace to be NaN.  In version 9, let's make them 0.
  df['Precipitation Melted (mm)'].replace('T', 0, inplace=True)  # Change to np.nan if desired
  df['Precipitation Melted (mm)'] = df['Precipitation Melted (mm)'].astype('float64')
  
  # Fill in simplistic averages (mean of high/low) of temp and pressure where missing
  df['Temperature Average (C)'].fillna( (df['Temperature High (C)'] + df['Temperature Low (C)'])/2, inplace=True)
  df['Pressure Average (mbar)'].fillna( (df['Pressure High (mbar)'] + df['Pressure Low (mbar)'])/2, inplace=True)
  
  # Remove low pressure values
  df['Pressure Average (mbar)'].where(df['Pressure Average (mbar)']>800, inplace=True)
  
  # Calculate monthly averages
  df_avg = df.resample('1MS').agg({
    'Temperature Average (C)' : ['mean', 'count'],
    'Pressure Average (mbar)' : ['mean', 'count'],
    'Precipitation Melted (mm)' : ['mean', 'sum', 'count'],
    'Sea Surface Temperature (C)' : ['mean', 'count'],
    'Wind Average (knots)' : ['mean', 'count'],
  })
  
  # Add old temps from Baker 1996
  df0 = pd.read_csv('monthly_temps_1974_1989.csv', index_col='Date', parse_dates=True)
  df0.drop(['Year','Month'], axis=1, inplace=True)
  df0.columns = pd.MultiIndex.from_tuples([("Temperature Average (C)", "mean")])
  df_avg = pd.concat([df0, df_avg])
  print(df_avg)
  
  # Save to CSV
  df_avg.to_csv(args.fname, float_format='%2.2f', header=[
    'Mean Temperature (C)','Temperature Count',
    'Mean Pressure (mbar)','Pressure Count',
    'Mean Precipitation (mm)','Sum Precipitation (mm)','Precipitation Count',
    'Mean Sea Surface Temperature (C)', 'Sea Surface Temperature Count',
    'Mean Windspeed (knots)', 'Windspeed Count'])
  print('Output file: %s' %args.fname)


# Main function for command line mode
if __name__ == '__main__':
  # Command Line Arguments
  parser = argparse.ArgumentParser(description='PAL Monthly Weather Averaging Script')
  parser.add_argument('-f','--fname', type=str,
    default='PalmerStation_Monthly_Weather.csv',
    help='Output filename')
  args = parser.parse_args()
  main()
